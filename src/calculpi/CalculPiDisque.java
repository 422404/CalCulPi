/*
 * CalculPiDisque                                15/10/2017
 * Elyan Poujol
 * Pas de droits
 */

package calculpi;

// faut enlever
import java.util.logging.Level;
import java.util.logging.Logger;
//

/**
 * Calcule l'approximation avec un quart de disque, bla bla bla... go google ok ?!
 * @author Elyan Poujol
 */
public class CalculPiDisque {
    /** instance de l'interface graphique */
    private GUI gui;
    
    /**
     * Constructeur sans arguments de CalculPiDisque
     */
    public CalculPiDisque() {
        super();
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        }
        //</editor-fold>
        this.gui = new GUI();
        this.gui.setVisible(true);
    }
    
    private double[] calculer() {
        int nbPoints = this.gui.nbPoints;
        double[] resultat = new double[15];
        int k = 0;
        
        for (int j = 1, bla = 0; j <= 15; j++, bla++) {
            for (int i = 1; i <= nbPoints; i++) {
                double x = Math.random();
                double y = Math.random();
                if (x*x + y*y <= 1.0) {
                    k++;
                }
            }
            
            // on essaie de ne pas monopoliser le temps cpu du programme
            if (bla >= 100000) {
                bla = 0;
                try {
                    Thread.sleep(20);
                } catch (InterruptedException ex) { }
            }
            
            double a = nbPoints * j;
            double pi = (k * 4) / a;
            resultat[j - 1] = pi;
        }
        
        return resultat;
    }
    
    private void sliderNbPointsStateChanged(javax.swing.event.ChangeEvent evt) {                                            
        if (!this.gui.sliderNbPoints.getValueIsAdjusting()) {
            this.gui.nbPoints = this.gui.sliderNbPoints.getValue();
            this.gui.txtNbPoints.setText(this.gui.nbPoints + " pts");
        }
    }                                           

    private void btnCalculerActionPerformed(java.awt.event.ActionEvent evt) {
        double[] res = calculer();
        String aAfficher = "";
        
        for (int i = 0; i < res.length; i++) {
            aAfficher += res[i] + "\n";
        }
        
        this.gui.txtResultat.setText(aAfficher);
    }
    
    private class GUI extends javax.swing.JFrame {
        private javax.swing.JButton btnCalculer;
        private javax.swing.JLabel lblNbPoints;
        private javax.swing.JSlider sliderNbPoints;
        private javax.swing.JTextField txtNbPoints;
        private javax.swing.JTextArea txtResultat;
        private javax.swing.JScrollPane txtResultatScrollPane;
        private int nbPoints = 100000;
        
        /**
         * Creates new form GUI
         */
        public GUI() {
            initComponents();
        }  

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents() {
            txtResultatScrollPane = new javax.swing.JScrollPane();
            txtResultat = new javax.swing.JTextArea();
            btnCalculer = new javax.swing.JButton();
            sliderNbPoints = new javax.swing.JSlider();
            lblNbPoints = new javax.swing.JLabel();
            txtNbPoints = new javax.swing.JTextField();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            setTitle("Calcul Pi : MÃ©thode du quart de disque (non graphique)");
            setResizable(false);

            txtResultat.setEditable(false);
            txtResultat.setColumns(20);
            txtResultat.setRows(5);
            txtResultatScrollPane.setViewportView(txtResultat);

            btnCalculer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            btnCalculer.setText("Calculer !");
            btnCalculer.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnCalculerActionPerformed(evt);
                }
            });

            sliderNbPoints.setMajorTickSpacing(100000);
            sliderNbPoints.setMaximum(1000000);
            sliderNbPoints.setMinimum(100000);
            sliderNbPoints.setPaintTicks(true);
            sliderNbPoints.addChangeListener(new javax.swing.event.ChangeListener() {
                @Override
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    sliderNbPointsStateChanged(evt);
                }
            });

            lblNbPoints.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lblNbPoints.setText("Nombre de points :");

            txtNbPoints.setEditable(false);
            txtNbPoints.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            txtNbPoints.setText("100000 pts");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtResultatScrollPane)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(sliderNbPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblNbPoints)
                            .addGap(31, 31, 31)
                            .addComponent(txtNbPoints))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalculer, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(183, 183, 183)))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txtResultatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(sliderNbPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNbPoints)
                            .addComponent(txtNbPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(31, 31, 31)
                    .addComponent(btnCalculer)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>
    }
}
